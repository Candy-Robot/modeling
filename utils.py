from cProfile import label
import imp
import matplotlib.pyplot as plt
from load_data import dataset
# 给出
def draw_plt(ans_plist, x_in, y_in, index, plt_save):
    # 
    plt_list = []
    plt_title = 'Community distribution and ' + str(len(ans_plist)) + ' sorting site map'
    plt.title(plt_title)
    index_count = 0
    for i in range(len(index)-1):
        plt.scatter(x_in[index_count:index_count+index[i]], y_in[index_count:index_count+index[i]]
        , c=plt.cm.Set3(i), marker='.')
        index_count += index[i]
    plt.scatter(x_in[index_count:], y_in[index_count:], c=plt.cm.Set3(len(index)-1), marker='.')
    p_xlist, p_ylist = [], []
    for i in range(len(ans_plist)):
        p_xlist.append(ans_plist[i][0])
        p_ylist.append(ans_plist[i][1])
    plt.scatter(p_xlist, p_ylist, c='k', marker='.',s=300)
    

    plt.savefig(plt_save)

import xlsxwriter as xw

def xw_toExcel(data, fileName):  # xlsxwriter库储存数据到excel
    workbook = xw.Workbook(fileName)  # 创建工作簿,
    worksheet1 = workbook.add_worksheet("sheet1")  # 创建子表
    worksheet1.activate()  # 激活表
    title = ['编号','选址横坐标', '选址纵坐标', '所属区域', '选址半径','管辖范围小区个数','管辖范围内人口数']  # 设置表头
    worksheet1.write_row('A1', title)  # 从A1单元格开始写入表头
    i = 2  # 从第二行开始写入数据
    for j in range(len(data[0])):
        insertData = [j, data[0][j][0], data[0][j][1], data[1][j], data[2][j], data[3][j], data[4][j]]
        row = 'A' + str(i)
        worksheet1.write_row(row, insertData)
        i += 1
    workbook.close()  # 关闭表
 




if __name__=='__main__':
    abs_path = "/Users/candy/Documents/资源/研究生工作/浙江理工/数学建模/code/data/"
    path = "./data/"
    sheet = "excel3.xlsx"
    data = dataset(
        path=abs_path,
        sheet=sheet
    )    
    # ans_plist = [[51.75567610997987, 65.50814420915064], [58.78575403827583, 61.9855890308633], [58.67238768947047, 52.95818667118548], [69.78231093088318, 41.889317042620746], [68.92493590527162, 58.95961034775886], [68.22007439031493, 49.48101424580304], [49.480710970940294, 29.048935585555867], [54.709869719279084, 39.75465081067991], [47.20512155362201, 37.88872964122598], [42.49728293259758, 45.419651734425855], [36.511039191123906, 50.28149305898081], [46.129685517034474, 55.86177763261483], [50.60801184384906, 47.02429580918276], [57.663271985396946, 29.198909971549643], [59.97595286595664, 42.1938311169842], [60.23321190618163, 46.818600781035194], [70.96782357491759, 30.875115278970334], [80.7639051172734, 44.48095923393568], [36.49089863685033, 23.39752420547073], [39.34309780421798, 11.585239728957703], [65.81775688131961, 19.64493199773485], [82.73466793980428, 16.517948269824156], [42.22652801054102, 32.21752381078115], [25.770414188858965, 31.085003899221608], [32.10507562661378, 39.51063121661444]]
    # draw_plt(ans_plist, data.comm_x_axis, data.comm_y_axis, data.comm_loca_index, 'test')

    point_36 = [[58.6712870776733, 67.11275995923361], [58.65133320921463, 59.718376246755014], [50.38275819995757, 63.911580232166784], [57.16536101165223, 52.47719318072922], [69.26959067371858, 41.72730723643527], [69.61128357713116, 46.77212194598574], [69.24870731171754, 59.120501504369365], [65.95782661706477, 51.67916621990466], [49.06211719667542, 29.90929053027674], [43.346638544700426, 36.01365944074426], [54.19605627902303, 39.822401599399], [51.1423029711269, 47.02850768980241], [48.047797655439595, 37.56434224255103], [47.13603930739046, 44.10307211986405], [35.61677534531807, 50.121926740240546], [45.95856220723925, 55.80092528335009], [40.77734860973, 46.6966472481649], [48.563433732757, 49.72290803034407], [57.39356069328928, 28.52777741344449], [60.76772878447776, 43.13494877449169], [59.65256612081679, 46.752726265961606], [63.45721381662896, 35.464185915120524], [57.50936947355455, 40.49848227538111], [71.81483263263084, 30.299594026335686], [74.0309940022086, 40.6831011475408], [81.63193284850905, 45.11148351743859], [37.04491345550677, 21.876947088788757], [36.32145204146281, 9.35814183669917], [48.62818685562839, 16.60664928268703], [65.68575750860337, 21.862400069003783], [72.56879730382806, 16.494979100866516], [84.110377732019, 15.018408782398184], [40.17510063665177, 30.49941335472235], [25.9023287038418, 25.991961263093096], [26.635290626862293, 35.43359730327824], [33.38608327513059, 38.88389869525497]]
    point_9 = [[57.904151756966236, 62.13368153186243], [70.25789961224628, 44.89798239904786], [46.9327284456163, 32.28814992211138], [40.39357605664029, 48.88246920128598], [51.13433881643576, 46.70763546923735], [59.13515188296827, 41.73069603404401], [38.79494603741656, 14.873583536815447], [70.7010131662463, 22.282489412991534], [30.148612155511866, 34.91547575123575]]
    x_36, y_36 = [], []
    x_9, y_9 = [], []
    plt.title("model")
    for i in range(len(point_36)):
        x_36.append(point_36[i][0])
        y_36.append(point_36[i][1])
    for i in range(9):
        x_9.append(point_9[i][0])
        y_9.append(point_9[i][1])
    # plt.scatter(data.comm_x_axis, data.comm_y_axis, c='blue', label='downstream_point', s=10)
    plt.scatter(x_36, y_36, c='red', marker='.', label='middle_point', s=200)
    plt.scatter(x_9, y_9, c='black',label='upstream_point', s=300)
    plt.savefig('result/final_ans1.png')